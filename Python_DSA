# Array in python
 
# my_array = [7, 8, 3, 9, 5, 12, 45]
#minval = my_array[0]

#for i in my_array:
 #   if i<minval:
  #      minval=i

#print('Lowest value is:', minval)  


# Linked list - Traversing

#class Node:
 #   def __init__(self, data):
  #      self.data = data
   #     self.next = None

#def traverseAndPrint(head):
 #      while currentNode:
  #          print(currentNode.data, end='->')
   #         currentNode = currentNode.next
    #    print("NULL")

#node1 = Node(7)
#node2 = Node(3)
#node3 = Node(5)
#node4 = Node(12)
#node5 = Node(9)


#node1.next = node2
#node2.next = node3
#node3.next = node4
#node4.next = node5

#traverseAndPrint(node1)




# Finding minimum value in linked list

##def __init__(self, data):
  #      self.data = data
   #     self.next = None
#def findLowestValue(head):
 #   minValue = head.data
  #  currentNode = head.next
   # while currentNode:
    #    if currentNode.data<minValue:
     #       minValue = currentNode.data
      #      currentNode = currentNode.next
    #return minValue
            
#node1 = Node(7)
#node2 = Node(11)
#node3 = Node(3)
#node4 = Node(2)
#node5 = Node(9)

#node1.next = node2
#node2.next = node3
#node3.next = node4
#node4.next = node5

#print("The Lowest value in the linked list is: ", findLowestValue(node1))



# Deleting a node in Linked list
class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

def traverseAndPrint(head):
    currentNode = head
    while currentNode:
        print(currentNode.data, end='->')
        currentNode = currentNode.next
    print('NULL')

def deleteSpecificNode(head, nodeToDelete):
    if head == nodeToDelete:
        return head.next

    currentNode = head
    while currentNode.next and currentNode.next != nodeToDelete:
        currentNode = currentNode.next
    if currentNode.next is None:
        return head

    currentNode.next = currentNode.next.next
    return head

node1 = Node(7)
node1 = Node(7)
node2 = Node(11)
node3 = Node(3)
node4 = Node(2)
node5 = Node(9)

node1.next = node2
node2.next = node3
node3.next = node4
node4.next = node5

print("Before deletion:")
traverseAndPrint(node1)

# Example: delete node3 (with value 3)
node1 = deleteSpecificNode(node1, node5)

print("\nAfter deletion: ")
traverseAndPrint(node1)


        